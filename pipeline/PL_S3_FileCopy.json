{
	"name": "PL_S3_FileCopy",
	"properties": {
		"activities": [
			{
				"name": "CD_S3_to_ADLS",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "BinarySource",
						"storeSettings": {
							"type": "AmazonS3ReadSettings",
							"recursive": false,
							"modifiedDatetimeStart": {
								"value": "@pipeline().parameters.P_s3_file_date",
								"type": "Expression"
							},
							"deleteFilesAfterCompletion": false
						},
						"formatSettings": {
							"type": "BinaryReadSettings"
						}
					},
					"sink": {
						"type": "BinarySink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "DS_S3",
						"type": "DatasetReference",
						"parameters": {
							"P_bucket": {
								"value": "@pipeline().parameters.P_s3_bucket_name",
								"type": "Expression"
							},
							"P_folder": {
								"value": "@pipeline().parameters.P_s3_folder",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "DS_ADLS_Blob",
						"type": "DatasetReference",
						"parameters": {
							"P_container_name": {
								"value": "@pipeline().parameters.P_adls_container_name",
								"type": "Expression"
							},
							"P_folder": {
								"value": "@pipeline().parameters.P_adls_folder",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "EP_process_files",
				"description": "Call the pipeline to process files and restore the filevine db",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "CD_S3_to_ADLS",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "PL_process_files_restore_db",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"P_adls_container_name": {
							"value": "@pipeline().parameters.P_adls_container_name",
							"type": "Expression"
						},
						"P_adls_folder": {
							"value": "@pipeline().parameters.P_adls_folder",
							"type": "Expression"
						},
						"P_adls_container_name_archive": {
							"value": "@pipeline().parameters.P_adls_container_name_archive",
							"type": "Expression"
						},
						"P_adls_folder_archive": {
							"value": "@pipeline().parameters.P_adls_folder_archive",
							"type": "Expression"
						},
						"P_container_del_log": {
							"value": "@pipeline().parameters.P_container_del_log",
							"type": "Expression"
						},
						"P_days_in_archive": {
							"value": "@pipeline().parameters.P_days_in_archive",
							"type": "Expression"
						},
						"p_DBName": {
							"value": "@pipeline().parameters.p_DBName",
							"type": "Expression"
						},
						"p_DBNameSource": {
							"value": "@pipeline().parameters.p_DBNameSource",
							"type": "Expression"
						},
						"p_directoryData": {
							"value": "@pipeline().parameters.p_directoryData",
							"type": "Expression"
						},
						"p_directoryLog": {
							"value": "@pipeline().parameters.p_directoryLog",
							"type": "Expression"
						},
						"p_adls_container_URL": {
							"value": "@pipeline().parameters.p_adls_container_URL",
							"type": "Expression"
						},
						"p_directoryStandBy": {
							"value": "@pipeline().parameters.p_directoryStandBy",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "EP_send_email_success",
				"description": "Call the pipeline to send the success email",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "EP_process_files",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "PL_send_email",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"P_EmailTo": {
							"value": "@pipeline().parameters.P_email_to",
							"type": "Expression"
						},
						"P_DataFactoryName": {
							"value": "@pipeline().DataFactory",
							"type": "Expression"
						},
						"P_Message": {
							"value": "@concat('Pipeline: ', pipeline().Pipeline,' with RunId: ', pipeline().RunId, ' has succeeded. Please refer to the Trigger Id:',pipeline().TriggerId,' in the ADF dashboard for additional details')",
							"type": "Expression"
						},
						"P_Subject": {
							"value": "@concat(pipeline().Pipeline,': Success')",
							"type": "Expression"
						},
						"P_PipelineName": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "EP_send_email_failure",
				"description": "Call the pipeline to send the failure email",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "EP_process_files",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "PL_send_email",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"P_EmailTo": {
							"value": "@pipeline().parameters.P_email_to",
							"type": "Expression"
						},
						"P_DataFactoryName": {
							"value": "@pipeline().DataFactory",
							"type": "Expression"
						},
						"P_Message": {
							"value": "@concat('Pipeline: ', pipeline().Pipeline,' with RunId: ', pipeline().RunId, ' has failed. Please refer to the Trigger Id: ',pipeline().TriggerId,' in the ADF dashboard for additional details')",
							"type": "Expression"
						},
						"P_Subject": {
							"value": "@concat(pipeline().Pipeline,': Failed')",
							"type": "Expression"
						},
						"P_PipelineName": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						}
					}
				}
			}
		],
		"parameters": {
			"P_s3_bucket_name": {
				"type": "string",
				"defaultValue": "export-filevine-5"
			},
			"P_s3_folder": {
				"type": "string",
				"defaultValue": "database"
			},
			"P_adls_container_name": {
				"type": "string",
				"defaultValue": "fv-db-bak"
			},
			"P_adls_folder": {
				"type": "string"
			},
			"p_adls_container_URL": {
				"type": "string",
				"defaultValue": "https://stfilevinedev.blob.core.windows.net"
			},
			"P_s3_file_date": {
				"type": "string",
				"defaultValue": "2021-09-10"
			},
			"P_adls_container_name_archive": {
				"type": "string",
				"defaultValue": "fv-db-bak-archive"
			},
			"P_adls_folder_archive": {
				"type": "string"
			},
			"P_container_del_log": {
				"type": "string",
				"defaultValue": "fv-del-log"
			},
			"P_days_in_archive": {
				"type": "int",
				"defaultValue": 30
			},
			"P_email_to": {
				"type": "string",
				"defaultValue": "rpurushothaman@3cloudsolutions.com"
			},
			"p_DBName": {
				"type": "string",
				"defaultValue": "FileVine"
			},
			"p_DBNameSource": {
				"type": "string",
				"defaultValue": "OrgExport_FVtoFV_Migration"
			},
			"p_directoryData": {
				"type": "string",
				"defaultValue": "F:\\data"
			},
			"p_directoryLog": {
				"type": "string",
				"defaultValue": "F:\\log"
			},
			"p_directoryStandBy": {
				"type": "string"
			}
		},
		"annotations": []
	}
}