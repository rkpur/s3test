{
	"name": "PL_process_files_restore_db",
	"properties": {
		"description": "restore the db with the most recent file",
		"activities": [
			{
				"name": "GM_files",
				"description": "get the list of files from the blob storage",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "DS_ADLS_Blob",
						"type": "DatasetReference",
						"parameters": {
							"P_container_name": {
								"value": "@pipeline().parameters.P_adls_container_name",
								"type": "Expression"
							},
							"P_folder": {
								"value": "@pipeline().parameters.P_adls_folder",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "BinaryReadSettings"
					}
				}
			},
			{
				"name": "FE_files",
				"description": "loop through the files",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "GM_files",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('GM_files').output.childitems",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "IF_check_compare_file_date",
							"description": "check and compare the file date and if the file date is the max, set the file name. extract the date value from filename to compare",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "SV_file_date",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@or(empty(variables('V_max_file_date')), greaterOrEquals(\nint(variables('V_file_date')),int(variables('V_max_file_date'))\n))",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "SV_max_file_name",
										"description": "set the most recent file name",
										"type": "SetVariable",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"variableName": "V_max_file_name",
											"value": {
												"value": "@item().name",
												"type": "Expression"
											}
										}
									},
									{
										"name": "SV_max_file_date",
										"description": "set the most recent file date",
										"type": "SetVariable",
										"dependsOn": [
											{
												"activity": "SV_max_file_name",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"userProperties": [],
										"typeProperties": {
											"variableName": "V_max_file_date",
											"value": {
												"value": "@variables('V_file_date')",
												"type": "Expression"
											}
										}
									}
								]
							}
						},
						{
							"name": "SV_file_date",
							"description": "capture the date of the current file from its name",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "V_file_date",
								"value": {
									"value": "@substring(item().name,int(add(lastindexof(item().name,'.'),-8)),8)",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "CP_files_archive",
				"description": "copy all the files to the archive container and then delete",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "IF_file_not_found",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "BinarySource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": false,
							"deleteFilesAfterCompletion": false
						},
						"formatSettings": {
							"type": "BinaryReadSettings"
						}
					},
					"sink": {
						"type": "BinarySink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "DS_ADLS_Blob",
						"type": "DatasetReference",
						"parameters": {
							"P_container_name": {
								"value": "@pipeline().parameters.P_adls_container_name",
								"type": "Expression"
							},
							"P_folder": {
								"value": "@pipeline().parameters.P_adls_folder",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "DS_ADLS_Blob",
						"type": "DatasetReference",
						"parameters": {
							"P_container_name": {
								"value": "@pipeline().parameters.P_adls_container_name_target",
								"type": "Expression"
							},
							"P_folder": {
								"value": "@pipeline().parameters.P_adls_folder_target",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "DEL_files_source",
				"description": "delete the files from the source container/folder",
				"type": "Delete",
				"dependsOn": [
					{
						"activity": "CP_files_archive",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "DS_ADLS_Blob",
						"type": "DatasetReference",
						"parameters": {
							"P_container_name": {
								"value": "@pipeline().parameters.P_adls_container_name",
								"type": "Expression"
							},
							"P_folder": {
								"value": "@pipeline().parameters.P_adls_folder",
								"type": "Expression"
							}
						}
					},
					"logStorageSettings": {
						"linkedServiceName": {
							"referenceName": "LS_AzureBlobStorage",
							"type": "LinkedServiceReference"
						},
						"path": {
							"value": "@pipeline().parameters.P_folder_del_log",
							"type": "Expression"
						}
					},
					"enableLogging": true,
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": false,
						"enablePartitionDiscovery": false
					}
				}
			},
			{
				"name": "IF_file_not_found",
				"description": "if a file is available use it to restore the db",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "FE_files",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@empty(variables('V_max_file_name'))",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "SP_restore_db",
							"description": "calls stored procedure to restore the db",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[Util].[usp_Restore_DB]",
								"storedProcedureParameters": {
									"p_DBName": {
										"value": "FileVine",
										"type": "String"
									},
									"p_DBNameSource": {
										"value": "OrgExport_FVtoFV_Migration",
										"type": "String"
									},
									"p_directoryData": {
										"value": "F:\\data",
										"type": "String"
									},
									"p_directoryLog": {
										"value": "F:\\log",
										"type": "String"
									},
									"p_directoryStandBy": {
										"value": "",
										"type": "String"
									},
									"p_fileName": {
										"value": {
											"value": "@variables('V_max_file_name')",
											"type": "Expression"
										},
										"type": "String"
									},
									"p_fileURL": {
										"value": {
											"value": "@concat('https://stfilevinedev.blob.core.windows.net','/','fv-db-bak')",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_SQLServer_ESA19",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "SP_Filevine_dB_User_Mapping",
							"description": "grant access to Filevine db for different users",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "dbo.sp_Filevine_dB_User_Mapping",
								"storedProcedureParameters": {
									"p_DBName": {
										"value": "FileVine",
										"type": "String"
									},
									"p_DBNameSource": {
										"value": "OrgExport_FVtoFV_Migration",
										"type": "String"
									},
									"p_directoryData": {
										"value": "F:\\data",
										"type": "String"
									},
									"p_directoryLog": {
										"value": "F:\\log",
										"type": "String"
									},
									"p_directoryStandBy": {
										"value": "",
										"type": "String"
									},
									"p_fileName": {
										"value": {
											"value": "@variables('V_max_file_name')",
											"type": "Expression"
										},
										"type": "String"
									},
									"p_fileURL": {
										"value": {
											"value": "@concat('https://stfilevinedev.blob.core.windows.net','/','fv-db-bak')",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_SQLServer_ESA19",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "DEL_files_archive",
				"description": "delete the files from the archive container/folder",
				"type": "Delete",
				"dependsOn": [
					{
						"activity": "DEL_files_source",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "DS_ADLS_Blob",
						"type": "DatasetReference",
						"parameters": {
							"P_container_name": {
								"value": "@pipeline().parameters.P_adls_container_name_target",
								"type": "Expression"
							},
							"P_folder": {
								"value": "@pipeline().parameters.P_adls_folder_target",
								"type": "Expression"
							}
						}
					},
					"logStorageSettings": {
						"linkedServiceName": {
							"referenceName": "LS_AzureBlobStorage",
							"type": "LinkedServiceReference"
						},
						"path": {
							"value": "@pipeline().parameters.P_folder_del_log",
							"type": "Expression"
						}
					},
					"enableLogging": true,
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": false,
						"modifiedDatetimeEnd": {
							"value": "@getPastTime(pipeline().parameters.P_days_in_archive,'Day')",
							"type": "Expression"
						},
						"enablePartitionDiscovery": false
					}
				}
			}
		],
		"parameters": {
			"P_adls_container_name": {
				"type": "string",
				"defaultValue": "fv-db-bak"
			},
			"P_adls_folder": {
				"type": "string"
			},
			"P_adls_container_name_target": {
				"type": "string",
				"defaultValue": "fv-db-bak-archive"
			},
			"P_adls_folder_target": {
				"type": "string"
			},
			"P_folder_del_log": {
				"type": "string",
				"defaultValue": "fv-del-log"
			},
			"P_days_in_archive": {
				"type": "int",
				"defaultValue": 30
			}
		},
		"variables": {
			"V_max_file_name": {
				"type": "String"
			},
			"V_max_file_date": {
				"type": "String"
			},
			"V_file_date": {
				"type": "String"
			},
			"v_old_file_date": {
				"type": "String"
			}
		},
		"annotations": []
	}
}